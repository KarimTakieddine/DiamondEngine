#version 450 core

in vec3 position;
in vec3 color;
in vec2 textureCoordinate;

uniform CameraMatrices
{
    mat4 cameraProjection;
    mat4 cameraLocalToWorld;
    mat4 cameraLocalRotation;
    mat4 cameraView;
};

uniform mat4 modelLocalToWorld;
uniform mat4 modelLocalRotation;
uniform mat4 modelLocalScale;

out vec3 vertexColor;
out vec2 vertexTextureCoordinate;

void main() {
	mat4 cameraTransform		= cameraLocalToWorld * cameraLocalRotation;
	mat4 cameraViewTransform	= inverse(cameraTransform) * cameraView;
    mat4 model                  = modelLocalToWorld * modelLocalRotation * modelLocalScale;

    gl_Position = cameraProjection * cameraViewTransform * model * vec4(position, 1.0);

    vertexColor             = color;
    vertexTextureCoordinate = textureCoordinate;
}