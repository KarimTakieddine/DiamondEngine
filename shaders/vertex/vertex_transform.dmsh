#version 450 core

in vec3 position;
in vec3 color;
in vec2 textureCoordinate;

layout (location=0) uniform mat4 projection;
layout (location=1) uniform mat4 cameraTranslation;
layout (location=2) uniform mat4 cameraRotation;
layout (location=3) uniform mat4 cameraScale;
layout (location=4) uniform mat4 cameraView;
layout (location=5) uniform mat4 model;

out vec3 vertexColor;
out vec2 vertexTextureCoordinate;

void main() {
	mat4 cameraTransform		= cameraTranslation * cameraRotation * cameraScale;
	mat4 cameraViewTransform	= inverse(cameraTransform) * cameraView;

    gl_Position = projection * cameraViewTransform * model * vec4(position, 1.0);

    vertexColor             = color;
    vertexTextureCoordinate = textureCoordinate;
}